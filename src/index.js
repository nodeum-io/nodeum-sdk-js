/**
 * Nodeum API
 * The Nodeum API makes it easy to tap into the digital data mesh that runs across your organisation. Make requests to our API endpoints and we’ll give you everything you need to interconnect your business workflows with your storage.  All production API requests are made to:  http://nodeumhostname/api/  The current production version of the API is v1.   **REST** The Nodeum API is a RESTful API. This means that the API is designed to allow you to get, create, update, & delete objects with the HTTP verbs GET, POST, PUT, PATCH, & DELETE.  **JSON** The Nodeum API speaks exclusively in JSON. This means that you should always set the Content-Type header to application/json to ensure that your requests are properly accepted and processed by the API.  **Authentication** All API calls require user-password authentication.   **Cross-Origin Resource Sharing** The Nodeum API supports CORS for communicating from Javascript for these endpoints. You will need to specify an Origin URI when creating your application to allow for CORS to be whitelisted for your domain.   **Pagination** Some endpoints such as File Listing return a potentially lengthy array of objects. In order to keep the response sizes manageable the API will take advantage of pagination. Pagination is a mechanism for returning a subset of the results for a request and allowing for subsequent requests to “page” through the rest of the results until the end is reached. Paginated endpoints follow a standard interface that accepts two query parameters, limit and offset, and return a payload that follows a standard form. These parameters names and their behavior are borrowed from SQL LIMIT and OFFSET keywords.  **Versioning** The Nodeum API is constantly being worked on to add features, make improvements, and fix bugs. This means that you should expect changes to be introduced and documented.   However, there are some changes or additions that are considered backwards-compatible and your applications should be flexible enough to handle them. These include:  - Adding new endpoints to the API - Adding new attributes to the response of an existing endpoint - Changing the order of attributes of responses (JSON by definition is an object of unordered key/value pairs)  **Filter parameters** When browsing a list of items, multiple filter parameters may be applied. Some operators can be added to the value as a prefix:  - `=` value is equal. Default operator, may be omitted  - `!=` value is different  - `>` greater than  - `>=` greater than or equal  - `<` lower than  - `>=` lower than or equal  - `><` included in list, items should be separated by `|`  - `!><` not included in list, items should be separated by `|`  - `~` pattern matching, may include `%` (any characters) and `_` (one character)  - `!~` pattern not matching, may include `%` (any characters) and `_` (one character)  
 *
 * The version of the OpenAPI document: 2.1.0
 * Contact: info@nodeum.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import ActiveJobStatus from './model/ActiveJobStatus';
import ApiKey from './model/ApiKey';
import ApiKeyCollection from './model/ApiKeyCollection';
import ApiKeyFull from './model/ApiKeyFull';
import ApiKeyFullAllOf from './model/ApiKeyFullAllOf';
import ApiKeyScope from './model/ApiKeyScope';
import AttributeError from './model/AttributeError';
import Blank from './model/Blank';
import ByDateFacet from './model/ByDateFacet';
import ByDateFacetBucket from './model/ByDateFacetBucket';
import ByDateFacetBucketAllOf from './model/ByDateFacetBucketAllOf';
import ByDateFacetBuckets from './model/ByDateFacetBuckets';
import ByFileExtensionFacet from './model/ByFileExtensionFacet';
import ByFileExtensionFacetAllOf from './model/ByFileExtensionFacetAllOf';
import ByGroupOwnerFacet from './model/ByGroupOwnerFacet';
import ByGroupOwnerFacetAllOf from './model/ByGroupOwnerFacetAllOf';
import ByMetadataBucket from './model/ByMetadataBucket';
import ByMetadataBucketAllOf from './model/ByMetadataBucketAllOf';
import ByMetadataFacet from './model/ByMetadataFacet';
import ByMetadataFacetAllOf from './model/ByMetadataFacetAllOf';
import ByMetadataKeyBucket from './model/ByMetadataKeyBucket';
import ByMetadataKeyBucketAllOf from './model/ByMetadataKeyBucketAllOf';
import ByMetadataKeyBuckets from './model/ByMetadataKeyBuckets';
import ByMetadataValueBuckets from './model/ByMetadataValueBuckets';
import ByPrimaryCloudFacet from './model/ByPrimaryCloudFacet';
import ByPrimaryCloudFacetAllOf from './model/ByPrimaryCloudFacetAllOf';
import ByPrimaryFacet from './model/ByPrimaryFacet';
import ByPrimaryFacetAllOf from './model/ByPrimaryFacetAllOf';
import ByPrimaryNasFacet from './model/ByPrimaryNasFacet';
import ByPrimaryNasFacetAllOf from './model/ByPrimaryNasFacetAllOf';
import ByPrimaryStorageFacet from './model/ByPrimaryStorageFacet';
import ByPrimaryTypeFacet from './model/ByPrimaryTypeFacet';
import BySecondaryCloudFacet from './model/BySecondaryCloudFacet';
import BySecondaryCloudFacetAllOf from './model/BySecondaryCloudFacetAllOf';
import BySecondaryNasFacet from './model/BySecondaryNasFacet';
import BySecondaryNasFacetAllOf from './model/BySecondaryNasFacetAllOf';
import BySecondaryStorageFacet from './model/BySecondaryStorageFacet';
import BySecondaryTapeFacet from './model/BySecondaryTapeFacet';
import BySecondaryTapeFacetAllOf from './model/BySecondaryTapeFacetAllOf';
import BySecondaryTypeFacet from './model/BySecondaryTypeFacet';
import BySecondaryTypeFacetAllOf from './model/BySecondaryTypeFacetAllOf';
import BySizeFacet from './model/BySizeFacet';
import ByTaskMetadataFacet from './model/ByTaskMetadataFacet';
import ByTaskMetadataFacetAllOf from './model/ByTaskMetadataFacetAllOf';
import ByTaskStatusFacet from './model/ByTaskStatusFacet';
import ByTaskStatusFacetAllOf from './model/ByTaskStatusFacetAllOf';
import ByTaskStorageFacet from './model/ByTaskStorageFacet';
import ByTaskStorageFacetAllOf from './model/ByTaskStorageFacetAllOf';
import ByTaskWorkflowFacet from './model/ByTaskWorkflowFacet';
import ByTaskWorkflowFacetAllOf from './model/ByTaskWorkflowFacetAllOf';
import ByTypeFacetBucket from './model/ByTypeFacetBucket';
import ByTypeFacetBuckets from './model/ByTypeFacetBuckets';
import ByUserOwnerFacet from './model/ByUserOwnerFacet';
import ByUserOwnerFacetAllOf from './model/ByUserOwnerFacetAllOf';
import CloudBucket from './model/CloudBucket';
import CloudBucketCollection from './model/CloudBucketCollection';
import CloudBucketSimpleCollection from './model/CloudBucketSimpleCollection';
import CloudConnector from './model/CloudConnector';
import CloudConnectorCollection from './model/CloudConnectorCollection';
import Container from './model/Container';
import ContainerCollection from './model/ContainerCollection';
import ContainerPrivilege from './model/ContainerPrivilege';
import ContainerPrivilegeCollection from './model/ContainerPrivilegeCollection';
import DateToFileFacets from './model/DateToFileFacets';
import DefaultFacet from './model/DefaultFacet';
import Error from './model/Error';
import FileFacet from './model/FileFacet';
import FileFacetAllOf from './model/FileFacetAllOf';
import FileMetadataDefinition from './model/FileMetadataDefinition';
import FileMetadataDefinitionCollection from './model/FileMetadataDefinitionCollection';
import Frozen from './model/Frozen';
import GreaterThan from './model/GreaterThan';
import GreaterThanAllOf from './model/GreaterThanAllOf';
import GreaterThanOrEqualTo from './model/GreaterThanOrEqualTo';
import ImportFile from './model/ImportFile';
import ImportFileCollection from './model/ImportFileCollection';
import ImportFileWithPath from './model/ImportFileWithPath';
import Invalid from './model/Invalid';
import LessThan from './model/LessThan';
import LessThanAllOf from './model/LessThanAllOf';
import LessThanOrEqualTo from './model/LessThanOrEqualTo';
import MetadataDefinition from './model/MetadataDefinition';
import MountCollection from './model/MountCollection';
import MountInfo from './model/MountInfo';
import MountNotification from './model/MountNotification';
import MountStatus from './model/MountStatus';
import Nas from './model/Nas';
import NasCollection from './model/NasCollection';
import NasShare from './model/NasShare';
import NasShareCollection from './model/NasShareCollection';
import NodeumFile from './model/NodeumFile';
import NodeumFileCollection from './model/NodeumFileCollection';
import NodeumFileWithPath from './model/NodeumFileWithPath';
import NodeumFileWithPathAllOf from './model/NodeumFileWithPathAllOf';
import OccurrenceLessThan from './model/OccurrenceLessThan';
import OccurrenceLessThanAllOf from './model/OccurrenceLessThanAllOf';
import OccurrenceLessThanOrEqualTo from './model/OccurrenceLessThanOrEqualTo';
import OnTapesFile from './model/OnTapesFile';
import OnTapesFileCollection from './model/OnTapesFileCollection';
import Pool from './model/Pool';
import PoolCollection from './model/PoolCollection';
import PoolUp from './model/PoolUp';
import PoolUpAllOf from './model/PoolUpAllOf';
import PrimaryScan from './model/PrimaryScan';
import QuotaOnCache from './model/QuotaOnCache';
import Reset from './model/Reset';
import ResetSections from './model/ResetSections';
import SizeToDateFacets from './model/SizeToDateFacets';
import StorageByTypeFacets from './model/StorageByTypeFacets';
import StorageCloudBucketByTypeFacets from './model/StorageCloudBucketByTypeFacets';
import StorageCloudBucketFacets from './model/StorageCloudBucketFacets';
import StorageFacet from './model/StorageFacet';
import StorageNasShareByTypeFacets from './model/StorageNasShareByTypeFacets';
import StorageNasShareFacets from './model/StorageNasShareFacets';
import StoragePoolByTypeFacets from './model/StoragePoolByTypeFacets';
import StoragePoolFacets from './model/StoragePoolFacets';
import StorageTapeByTypeFacets from './model/StorageTapeByTypeFacets';
import StorageTapeFacets from './model/StorageTapeFacets';
import SystemGroup from './model/SystemGroup';
import SystemGroupCollection from './model/SystemGroupCollection';
import SystemUser from './model/SystemUser';
import SystemUserCollection from './model/SystemUserCollection';
import Taken from './model/Taken';
import TakenAllOf from './model/TakenAllOf';
import Tape from './model/Tape';
import TapeCollection from './model/TapeCollection';
import TapeDrive from './model/TapeDrive';
import TapeDriveAllOf from './model/TapeDriveAllOf';
import TapeDriveCollection from './model/TapeDriveCollection';
import TapeDriveDevice from './model/TapeDriveDevice';
import TapeDriveDeviceCollection from './model/TapeDriveDeviceCollection';
import TapeLibrary from './model/TapeLibrary';
import TapeLibraryAllOf from './model/TapeLibraryAllOf';
import TapeLibraryCollection from './model/TapeLibraryCollection';
import TapeLibraryDevice from './model/TapeLibraryDevice';
import TapeLibraryDeviceCollection from './model/TapeLibraryDeviceCollection';
import TapeStat from './model/TapeStat';
import TapeStatCollection from './model/TapeStatCollection';
import Task from './model/Task';
import TaskByWorkflowBucket from './model/TaskByWorkflowBucket';
import TaskByWorkflowBucketAllOf from './model/TaskByWorkflowBucketAllOf';
import TaskByWorkflowBuckets from './model/TaskByWorkflowBuckets';
import TaskCallback from './model/TaskCallback';
import TaskCallbackCollection from './model/TaskCallbackCollection';
import TaskCollection from './model/TaskCollection';
import TaskDestinationCollection from './model/TaskDestinationCollection';
import TaskDestinationDown from './model/TaskDestinationDown';
import TaskDestinationUp from './model/TaskDestinationUp';
import TaskExecution from './model/TaskExecution';
import TaskExecutionCollection from './model/TaskExecutionCollection';
import TaskFacet from './model/TaskFacet';
import TaskFacetAllOf from './model/TaskFacetAllOf';
import TaskFacetBucket from './model/TaskFacetBucket';
import TaskFacetBuckets from './model/TaskFacetBuckets';
import TaskFacetMetadataBucket from './model/TaskFacetMetadataBucket';
import TaskFacetMetadataKeyBucket from './model/TaskFacetMetadataKeyBucket';
import TaskFacetMetadataKeyBucketAllOf from './model/TaskFacetMetadataKeyBucketAllOf';
import TaskFacetMetadataKeyBuckets from './model/TaskFacetMetadataKeyBuckets';
import TaskFacetMetadataValueBuckets from './model/TaskFacetMetadataValueBuckets';
import TaskMetadataDefinition from './model/TaskMetadataDefinition';
import TaskMetadataDefinitionAllOf from './model/TaskMetadataDefinitionAllOf';
import TaskMetadataDefinitionCollection from './model/TaskMetadataDefinitionCollection';
import TaskMetadatum from './model/TaskMetadatum';
import TaskMetadatumCollection from './model/TaskMetadatumCollection';
import TaskOption from './model/TaskOption';
import TaskOptionCollection from './model/TaskOptionCollection';
import TaskSchedule from './model/TaskSchedule';
import TaskScheduleCollection from './model/TaskScheduleCollection';
import TaskSourceCollection from './model/TaskSourceCollection';
import TaskSourceDown from './model/TaskSourceDown';
import TaskSourceUp from './model/TaskSourceUp';
import TooLong from './model/TooLong';
import TooLongAllOf from './model/TooLongAllOf';
import TooShort from './model/TooShort';
import TooShortAllOf from './model/TooShortAllOf';
import TypeToPrimaryFacets from './model/TypeToPrimaryFacets';
import TypeToSecondaryFacets from './model/TypeToSecondaryFacets';
import UserConfiguration from './model/UserConfiguration';
import UserConfigurationCollection from './model/UserConfigurationCollection';
import CloudBucketsApi from './api/CloudBucketsApi';
import CloudConnectorsApi from './api/CloudConnectorsApi';
import ContainersApi from './api/ContainersApi';
import FilesApi from './api/FilesApi';
import MetadataApi from './api/MetadataApi';
import MountsApi from './api/MountsApi';
import NasApi from './api/NasApi';
import NasSharesApi from './api/NasSharesApi';
import PoolsApi from './api/PoolsApi';
import StatisticsApi from './api/StatisticsApi';
import SystemsApi from './api/SystemsApi';
import TapeDrivesApi from './api/TapeDrivesApi';
import TapeLibrariesApi from './api/TapeLibrariesApi';
import TapesApi from './api/TapesApi';
import TaskCallbacksApi from './api/TaskCallbacksApi';
import TaskDestinationsApi from './api/TaskDestinationsApi';
import TaskExecutionsApi from './api/TaskExecutionsApi';
import TaskMetadataApi from './api/TaskMetadataApi';
import TaskOptionsApi from './api/TaskOptionsApi';
import TaskSchedulesApi from './api/TaskSchedulesApi';
import TaskSourcesApi from './api/TaskSourcesApi';
import TasksApi from './api/TasksApi';
import UsersApi from './api/UsersApi';


/**
* .<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var NodeumApi = require('index'); // See note below*.
* var xxxSvc = new NodeumApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new NodeumApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new NodeumApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new NodeumApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.87.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The ActiveJobStatus model constructor.
     * @property {module:model/ActiveJobStatus}
     */
    ActiveJobStatus,

    /**
     * The ApiKey model constructor.
     * @property {module:model/ApiKey}
     */
    ApiKey,

    /**
     * The ApiKeyCollection model constructor.
     * @property {module:model/ApiKeyCollection}
     */
    ApiKeyCollection,

    /**
     * The ApiKeyFull model constructor.
     * @property {module:model/ApiKeyFull}
     */
    ApiKeyFull,

    /**
     * The ApiKeyFullAllOf model constructor.
     * @property {module:model/ApiKeyFullAllOf}
     */
    ApiKeyFullAllOf,

    /**
     * The ApiKeyScope model constructor.
     * @property {module:model/ApiKeyScope}
     */
    ApiKeyScope,

    /**
     * The AttributeError model constructor.
     * @property {module:model/AttributeError}
     */
    AttributeError,

    /**
     * The Blank model constructor.
     * @property {module:model/Blank}
     */
    Blank,

    /**
     * The ByDateFacet model constructor.
     * @property {module:model/ByDateFacet}
     */
    ByDateFacet,

    /**
     * The ByDateFacetBucket model constructor.
     * @property {module:model/ByDateFacetBucket}
     */
    ByDateFacetBucket,

    /**
     * The ByDateFacetBucketAllOf model constructor.
     * @property {module:model/ByDateFacetBucketAllOf}
     */
    ByDateFacetBucketAllOf,

    /**
     * The ByDateFacetBuckets model constructor.
     * @property {module:model/ByDateFacetBuckets}
     */
    ByDateFacetBuckets,

    /**
     * The ByFileExtensionFacet model constructor.
     * @property {module:model/ByFileExtensionFacet}
     */
    ByFileExtensionFacet,

    /**
     * The ByFileExtensionFacetAllOf model constructor.
     * @property {module:model/ByFileExtensionFacetAllOf}
     */
    ByFileExtensionFacetAllOf,

    /**
     * The ByGroupOwnerFacet model constructor.
     * @property {module:model/ByGroupOwnerFacet}
     */
    ByGroupOwnerFacet,

    /**
     * The ByGroupOwnerFacetAllOf model constructor.
     * @property {module:model/ByGroupOwnerFacetAllOf}
     */
    ByGroupOwnerFacetAllOf,

    /**
     * The ByMetadataBucket model constructor.
     * @property {module:model/ByMetadataBucket}
     */
    ByMetadataBucket,

    /**
     * The ByMetadataBucketAllOf model constructor.
     * @property {module:model/ByMetadataBucketAllOf}
     */
    ByMetadataBucketAllOf,

    /**
     * The ByMetadataFacet model constructor.
     * @property {module:model/ByMetadataFacet}
     */
    ByMetadataFacet,

    /**
     * The ByMetadataFacetAllOf model constructor.
     * @property {module:model/ByMetadataFacetAllOf}
     */
    ByMetadataFacetAllOf,

    /**
     * The ByMetadataKeyBucket model constructor.
     * @property {module:model/ByMetadataKeyBucket}
     */
    ByMetadataKeyBucket,

    /**
     * The ByMetadataKeyBucketAllOf model constructor.
     * @property {module:model/ByMetadataKeyBucketAllOf}
     */
    ByMetadataKeyBucketAllOf,

    /**
     * The ByMetadataKeyBuckets model constructor.
     * @property {module:model/ByMetadataKeyBuckets}
     */
    ByMetadataKeyBuckets,

    /**
     * The ByMetadataValueBuckets model constructor.
     * @property {module:model/ByMetadataValueBuckets}
     */
    ByMetadataValueBuckets,

    /**
     * The ByPrimaryCloudFacet model constructor.
     * @property {module:model/ByPrimaryCloudFacet}
     */
    ByPrimaryCloudFacet,

    /**
     * The ByPrimaryCloudFacetAllOf model constructor.
     * @property {module:model/ByPrimaryCloudFacetAllOf}
     */
    ByPrimaryCloudFacetAllOf,

    /**
     * The ByPrimaryFacet model constructor.
     * @property {module:model/ByPrimaryFacet}
     */
    ByPrimaryFacet,

    /**
     * The ByPrimaryFacetAllOf model constructor.
     * @property {module:model/ByPrimaryFacetAllOf}
     */
    ByPrimaryFacetAllOf,

    /**
     * The ByPrimaryNasFacet model constructor.
     * @property {module:model/ByPrimaryNasFacet}
     */
    ByPrimaryNasFacet,

    /**
     * The ByPrimaryNasFacetAllOf model constructor.
     * @property {module:model/ByPrimaryNasFacetAllOf}
     */
    ByPrimaryNasFacetAllOf,

    /**
     * The ByPrimaryStorageFacet model constructor.
     * @property {module:model/ByPrimaryStorageFacet}
     */
    ByPrimaryStorageFacet,

    /**
     * The ByPrimaryTypeFacet model constructor.
     * @property {module:model/ByPrimaryTypeFacet}
     */
    ByPrimaryTypeFacet,

    /**
     * The BySecondaryCloudFacet model constructor.
     * @property {module:model/BySecondaryCloudFacet}
     */
    BySecondaryCloudFacet,

    /**
     * The BySecondaryCloudFacetAllOf model constructor.
     * @property {module:model/BySecondaryCloudFacetAllOf}
     */
    BySecondaryCloudFacetAllOf,

    /**
     * The BySecondaryNasFacet model constructor.
     * @property {module:model/BySecondaryNasFacet}
     */
    BySecondaryNasFacet,

    /**
     * The BySecondaryNasFacetAllOf model constructor.
     * @property {module:model/BySecondaryNasFacetAllOf}
     */
    BySecondaryNasFacetAllOf,

    /**
     * The BySecondaryStorageFacet model constructor.
     * @property {module:model/BySecondaryStorageFacet}
     */
    BySecondaryStorageFacet,

    /**
     * The BySecondaryTapeFacet model constructor.
     * @property {module:model/BySecondaryTapeFacet}
     */
    BySecondaryTapeFacet,

    /**
     * The BySecondaryTapeFacetAllOf model constructor.
     * @property {module:model/BySecondaryTapeFacetAllOf}
     */
    BySecondaryTapeFacetAllOf,

    /**
     * The BySecondaryTypeFacet model constructor.
     * @property {module:model/BySecondaryTypeFacet}
     */
    BySecondaryTypeFacet,

    /**
     * The BySecondaryTypeFacetAllOf model constructor.
     * @property {module:model/BySecondaryTypeFacetAllOf}
     */
    BySecondaryTypeFacetAllOf,

    /**
     * The BySizeFacet model constructor.
     * @property {module:model/BySizeFacet}
     */
    BySizeFacet,

    /**
     * The ByTaskMetadataFacet model constructor.
     * @property {module:model/ByTaskMetadataFacet}
     */
    ByTaskMetadataFacet,

    /**
     * The ByTaskMetadataFacetAllOf model constructor.
     * @property {module:model/ByTaskMetadataFacetAllOf}
     */
    ByTaskMetadataFacetAllOf,

    /**
     * The ByTaskStatusFacet model constructor.
     * @property {module:model/ByTaskStatusFacet}
     */
    ByTaskStatusFacet,

    /**
     * The ByTaskStatusFacetAllOf model constructor.
     * @property {module:model/ByTaskStatusFacetAllOf}
     */
    ByTaskStatusFacetAllOf,

    /**
     * The ByTaskStorageFacet model constructor.
     * @property {module:model/ByTaskStorageFacet}
     */
    ByTaskStorageFacet,

    /**
     * The ByTaskStorageFacetAllOf model constructor.
     * @property {module:model/ByTaskStorageFacetAllOf}
     */
    ByTaskStorageFacetAllOf,

    /**
     * The ByTaskWorkflowFacet model constructor.
     * @property {module:model/ByTaskWorkflowFacet}
     */
    ByTaskWorkflowFacet,

    /**
     * The ByTaskWorkflowFacetAllOf model constructor.
     * @property {module:model/ByTaskWorkflowFacetAllOf}
     */
    ByTaskWorkflowFacetAllOf,

    /**
     * The ByTypeFacetBucket model constructor.
     * @property {module:model/ByTypeFacetBucket}
     */
    ByTypeFacetBucket,

    /**
     * The ByTypeFacetBuckets model constructor.
     * @property {module:model/ByTypeFacetBuckets}
     */
    ByTypeFacetBuckets,

    /**
     * The ByUserOwnerFacet model constructor.
     * @property {module:model/ByUserOwnerFacet}
     */
    ByUserOwnerFacet,

    /**
     * The ByUserOwnerFacetAllOf model constructor.
     * @property {module:model/ByUserOwnerFacetAllOf}
     */
    ByUserOwnerFacetAllOf,

    /**
     * The CloudBucket model constructor.
     * @property {module:model/CloudBucket}
     */
    CloudBucket,

    /**
     * The CloudBucketCollection model constructor.
     * @property {module:model/CloudBucketCollection}
     */
    CloudBucketCollection,

    /**
     * The CloudBucketSimpleCollection model constructor.
     * @property {module:model/CloudBucketSimpleCollection}
     */
    CloudBucketSimpleCollection,

    /**
     * The CloudConnector model constructor.
     * @property {module:model/CloudConnector}
     */
    CloudConnector,

    /**
     * The CloudConnectorCollection model constructor.
     * @property {module:model/CloudConnectorCollection}
     */
    CloudConnectorCollection,

    /**
     * The Container model constructor.
     * @property {module:model/Container}
     */
    Container,

    /**
     * The ContainerCollection model constructor.
     * @property {module:model/ContainerCollection}
     */
    ContainerCollection,

    /**
     * The ContainerPrivilege model constructor.
     * @property {module:model/ContainerPrivilege}
     */
    ContainerPrivilege,

    /**
     * The ContainerPrivilegeCollection model constructor.
     * @property {module:model/ContainerPrivilegeCollection}
     */
    ContainerPrivilegeCollection,

    /**
     * The DateToFileFacets model constructor.
     * @property {module:model/DateToFileFacets}
     */
    DateToFileFacets,

    /**
     * The DefaultFacet model constructor.
     * @property {module:model/DefaultFacet}
     */
    DefaultFacet,

    /**
     * The Error model constructor.
     * @property {module:model/Error}
     */
    Error,

    /**
     * The FileFacet model constructor.
     * @property {module:model/FileFacet}
     */
    FileFacet,

    /**
     * The FileFacetAllOf model constructor.
     * @property {module:model/FileFacetAllOf}
     */
    FileFacetAllOf,

    /**
     * The FileMetadataDefinition model constructor.
     * @property {module:model/FileMetadataDefinition}
     */
    FileMetadataDefinition,

    /**
     * The FileMetadataDefinitionCollection model constructor.
     * @property {module:model/FileMetadataDefinitionCollection}
     */
    FileMetadataDefinitionCollection,

    /**
     * The Frozen model constructor.
     * @property {module:model/Frozen}
     */
    Frozen,

    /**
     * The GreaterThan model constructor.
     * @property {module:model/GreaterThan}
     */
    GreaterThan,

    /**
     * The GreaterThanAllOf model constructor.
     * @property {module:model/GreaterThanAllOf}
     */
    GreaterThanAllOf,

    /**
     * The GreaterThanOrEqualTo model constructor.
     * @property {module:model/GreaterThanOrEqualTo}
     */
    GreaterThanOrEqualTo,

    /**
     * The ImportFile model constructor.
     * @property {module:model/ImportFile}
     */
    ImportFile,

    /**
     * The ImportFileCollection model constructor.
     * @property {module:model/ImportFileCollection}
     */
    ImportFileCollection,

    /**
     * The ImportFileWithPath model constructor.
     * @property {module:model/ImportFileWithPath}
     */
    ImportFileWithPath,

    /**
     * The Invalid model constructor.
     * @property {module:model/Invalid}
     */
    Invalid,

    /**
     * The LessThan model constructor.
     * @property {module:model/LessThan}
     */
    LessThan,

    /**
     * The LessThanAllOf model constructor.
     * @property {module:model/LessThanAllOf}
     */
    LessThanAllOf,

    /**
     * The LessThanOrEqualTo model constructor.
     * @property {module:model/LessThanOrEqualTo}
     */
    LessThanOrEqualTo,

    /**
     * The MetadataDefinition model constructor.
     * @property {module:model/MetadataDefinition}
     */
    MetadataDefinition,

    /**
     * The MountCollection model constructor.
     * @property {module:model/MountCollection}
     */
    MountCollection,

    /**
     * The MountInfo model constructor.
     * @property {module:model/MountInfo}
     */
    MountInfo,

    /**
     * The MountNotification model constructor.
     * @property {module:model/MountNotification}
     */
    MountNotification,

    /**
     * The MountStatus model constructor.
     * @property {module:model/MountStatus}
     */
    MountStatus,

    /**
     * The Nas model constructor.
     * @property {module:model/Nas}
     */
    Nas,

    /**
     * The NasCollection model constructor.
     * @property {module:model/NasCollection}
     */
    NasCollection,

    /**
     * The NasShare model constructor.
     * @property {module:model/NasShare}
     */
    NasShare,

    /**
     * The NasShareCollection model constructor.
     * @property {module:model/NasShareCollection}
     */
    NasShareCollection,

    /**
     * The NodeumFile model constructor.
     * @property {module:model/NodeumFile}
     */
    NodeumFile,

    /**
     * The NodeumFileCollection model constructor.
     * @property {module:model/NodeumFileCollection}
     */
    NodeumFileCollection,

    /**
     * The NodeumFileWithPath model constructor.
     * @property {module:model/NodeumFileWithPath}
     */
    NodeumFileWithPath,

    /**
     * The NodeumFileWithPathAllOf model constructor.
     * @property {module:model/NodeumFileWithPathAllOf}
     */
    NodeumFileWithPathAllOf,

    /**
     * The OccurrenceLessThan model constructor.
     * @property {module:model/OccurrenceLessThan}
     */
    OccurrenceLessThan,

    /**
     * The OccurrenceLessThanAllOf model constructor.
     * @property {module:model/OccurrenceLessThanAllOf}
     */
    OccurrenceLessThanAllOf,

    /**
     * The OccurrenceLessThanOrEqualTo model constructor.
     * @property {module:model/OccurrenceLessThanOrEqualTo}
     */
    OccurrenceLessThanOrEqualTo,

    /**
     * The OnTapesFile model constructor.
     * @property {module:model/OnTapesFile}
     */
    OnTapesFile,

    /**
     * The OnTapesFileCollection model constructor.
     * @property {module:model/OnTapesFileCollection}
     */
    OnTapesFileCollection,

    /**
     * The Pool model constructor.
     * @property {module:model/Pool}
     */
    Pool,

    /**
     * The PoolCollection model constructor.
     * @property {module:model/PoolCollection}
     */
    PoolCollection,

    /**
     * The PoolUp model constructor.
     * @property {module:model/PoolUp}
     */
    PoolUp,

    /**
     * The PoolUpAllOf model constructor.
     * @property {module:model/PoolUpAllOf}
     */
    PoolUpAllOf,

    /**
     * The PrimaryScan model constructor.
     * @property {module:model/PrimaryScan}
     */
    PrimaryScan,

    /**
     * The QuotaOnCache model constructor.
     * @property {module:model/QuotaOnCache}
     */
    QuotaOnCache,

    /**
     * The Reset model constructor.
     * @property {module:model/Reset}
     */
    Reset,

    /**
     * The ResetSections model constructor.
     * @property {module:model/ResetSections}
     */
    ResetSections,

    /**
     * The SizeToDateFacets model constructor.
     * @property {module:model/SizeToDateFacets}
     */
    SizeToDateFacets,

    /**
     * The StorageByTypeFacets model constructor.
     * @property {module:model/StorageByTypeFacets}
     */
    StorageByTypeFacets,

    /**
     * The StorageCloudBucketByTypeFacets model constructor.
     * @property {module:model/StorageCloudBucketByTypeFacets}
     */
    StorageCloudBucketByTypeFacets,

    /**
     * The StorageCloudBucketFacets model constructor.
     * @property {module:model/StorageCloudBucketFacets}
     */
    StorageCloudBucketFacets,

    /**
     * The StorageFacet model constructor.
     * @property {module:model/StorageFacet}
     */
    StorageFacet,

    /**
     * The StorageNasShareByTypeFacets model constructor.
     * @property {module:model/StorageNasShareByTypeFacets}
     */
    StorageNasShareByTypeFacets,

    /**
     * The StorageNasShareFacets model constructor.
     * @property {module:model/StorageNasShareFacets}
     */
    StorageNasShareFacets,

    /**
     * The StoragePoolByTypeFacets model constructor.
     * @property {module:model/StoragePoolByTypeFacets}
     */
    StoragePoolByTypeFacets,

    /**
     * The StoragePoolFacets model constructor.
     * @property {module:model/StoragePoolFacets}
     */
    StoragePoolFacets,

    /**
     * The StorageTapeByTypeFacets model constructor.
     * @property {module:model/StorageTapeByTypeFacets}
     */
    StorageTapeByTypeFacets,

    /**
     * The StorageTapeFacets model constructor.
     * @property {module:model/StorageTapeFacets}
     */
    StorageTapeFacets,

    /**
     * The SystemGroup model constructor.
     * @property {module:model/SystemGroup}
     */
    SystemGroup,

    /**
     * The SystemGroupCollection model constructor.
     * @property {module:model/SystemGroupCollection}
     */
    SystemGroupCollection,

    /**
     * The SystemUser model constructor.
     * @property {module:model/SystemUser}
     */
    SystemUser,

    /**
     * The SystemUserCollection model constructor.
     * @property {module:model/SystemUserCollection}
     */
    SystemUserCollection,

    /**
     * The Taken model constructor.
     * @property {module:model/Taken}
     */
    Taken,

    /**
     * The TakenAllOf model constructor.
     * @property {module:model/TakenAllOf}
     */
    TakenAllOf,

    /**
     * The Tape model constructor.
     * @property {module:model/Tape}
     */
    Tape,

    /**
     * The TapeCollection model constructor.
     * @property {module:model/TapeCollection}
     */
    TapeCollection,

    /**
     * The TapeDrive model constructor.
     * @property {module:model/TapeDrive}
     */
    TapeDrive,

    /**
     * The TapeDriveAllOf model constructor.
     * @property {module:model/TapeDriveAllOf}
     */
    TapeDriveAllOf,

    /**
     * The TapeDriveCollection model constructor.
     * @property {module:model/TapeDriveCollection}
     */
    TapeDriveCollection,

    /**
     * The TapeDriveDevice model constructor.
     * @property {module:model/TapeDriveDevice}
     */
    TapeDriveDevice,

    /**
     * The TapeDriveDeviceCollection model constructor.
     * @property {module:model/TapeDriveDeviceCollection}
     */
    TapeDriveDeviceCollection,

    /**
     * The TapeLibrary model constructor.
     * @property {module:model/TapeLibrary}
     */
    TapeLibrary,

    /**
     * The TapeLibraryAllOf model constructor.
     * @property {module:model/TapeLibraryAllOf}
     */
    TapeLibraryAllOf,

    /**
     * The TapeLibraryCollection model constructor.
     * @property {module:model/TapeLibraryCollection}
     */
    TapeLibraryCollection,

    /**
     * The TapeLibraryDevice model constructor.
     * @property {module:model/TapeLibraryDevice}
     */
    TapeLibraryDevice,

    /**
     * The TapeLibraryDeviceCollection model constructor.
     * @property {module:model/TapeLibraryDeviceCollection}
     */
    TapeLibraryDeviceCollection,

    /**
     * The TapeStat model constructor.
     * @property {module:model/TapeStat}
     */
    TapeStat,

    /**
     * The TapeStatCollection model constructor.
     * @property {module:model/TapeStatCollection}
     */
    TapeStatCollection,

    /**
     * The Task model constructor.
     * @property {module:model/Task}
     */
    Task,

    /**
     * The TaskByWorkflowBucket model constructor.
     * @property {module:model/TaskByWorkflowBucket}
     */
    TaskByWorkflowBucket,

    /**
     * The TaskByWorkflowBucketAllOf model constructor.
     * @property {module:model/TaskByWorkflowBucketAllOf}
     */
    TaskByWorkflowBucketAllOf,

    /**
     * The TaskByWorkflowBuckets model constructor.
     * @property {module:model/TaskByWorkflowBuckets}
     */
    TaskByWorkflowBuckets,

    /**
     * The TaskCallback model constructor.
     * @property {module:model/TaskCallback}
     */
    TaskCallback,

    /**
     * The TaskCallbackCollection model constructor.
     * @property {module:model/TaskCallbackCollection}
     */
    TaskCallbackCollection,

    /**
     * The TaskCollection model constructor.
     * @property {module:model/TaskCollection}
     */
    TaskCollection,

    /**
     * The TaskDestinationCollection model constructor.
     * @property {module:model/TaskDestinationCollection}
     */
    TaskDestinationCollection,

    /**
     * The TaskDestinationDown model constructor.
     * @property {module:model/TaskDestinationDown}
     */
    TaskDestinationDown,

    /**
     * The TaskDestinationUp model constructor.
     * @property {module:model/TaskDestinationUp}
     */
    TaskDestinationUp,

    /**
     * The TaskExecution model constructor.
     * @property {module:model/TaskExecution}
     */
    TaskExecution,

    /**
     * The TaskExecutionCollection model constructor.
     * @property {module:model/TaskExecutionCollection}
     */
    TaskExecutionCollection,

    /**
     * The TaskFacet model constructor.
     * @property {module:model/TaskFacet}
     */
    TaskFacet,

    /**
     * The TaskFacetAllOf model constructor.
     * @property {module:model/TaskFacetAllOf}
     */
    TaskFacetAllOf,

    /**
     * The TaskFacetBucket model constructor.
     * @property {module:model/TaskFacetBucket}
     */
    TaskFacetBucket,

    /**
     * The TaskFacetBuckets model constructor.
     * @property {module:model/TaskFacetBuckets}
     */
    TaskFacetBuckets,

    /**
     * The TaskFacetMetadataBucket model constructor.
     * @property {module:model/TaskFacetMetadataBucket}
     */
    TaskFacetMetadataBucket,

    /**
     * The TaskFacetMetadataKeyBucket model constructor.
     * @property {module:model/TaskFacetMetadataKeyBucket}
     */
    TaskFacetMetadataKeyBucket,

    /**
     * The TaskFacetMetadataKeyBucketAllOf model constructor.
     * @property {module:model/TaskFacetMetadataKeyBucketAllOf}
     */
    TaskFacetMetadataKeyBucketAllOf,

    /**
     * The TaskFacetMetadataKeyBuckets model constructor.
     * @property {module:model/TaskFacetMetadataKeyBuckets}
     */
    TaskFacetMetadataKeyBuckets,

    /**
     * The TaskFacetMetadataValueBuckets model constructor.
     * @property {module:model/TaskFacetMetadataValueBuckets}
     */
    TaskFacetMetadataValueBuckets,

    /**
     * The TaskMetadataDefinition model constructor.
     * @property {module:model/TaskMetadataDefinition}
     */
    TaskMetadataDefinition,

    /**
     * The TaskMetadataDefinitionAllOf model constructor.
     * @property {module:model/TaskMetadataDefinitionAllOf}
     */
    TaskMetadataDefinitionAllOf,

    /**
     * The TaskMetadataDefinitionCollection model constructor.
     * @property {module:model/TaskMetadataDefinitionCollection}
     */
    TaskMetadataDefinitionCollection,

    /**
     * The TaskMetadatum model constructor.
     * @property {module:model/TaskMetadatum}
     */
    TaskMetadatum,

    /**
     * The TaskMetadatumCollection model constructor.
     * @property {module:model/TaskMetadatumCollection}
     */
    TaskMetadatumCollection,

    /**
     * The TaskOption model constructor.
     * @property {module:model/TaskOption}
     */
    TaskOption,

    /**
     * The TaskOptionCollection model constructor.
     * @property {module:model/TaskOptionCollection}
     */
    TaskOptionCollection,

    /**
     * The TaskSchedule model constructor.
     * @property {module:model/TaskSchedule}
     */
    TaskSchedule,

    /**
     * The TaskScheduleCollection model constructor.
     * @property {module:model/TaskScheduleCollection}
     */
    TaskScheduleCollection,

    /**
     * The TaskSourceCollection model constructor.
     * @property {module:model/TaskSourceCollection}
     */
    TaskSourceCollection,

    /**
     * The TaskSourceDown model constructor.
     * @property {module:model/TaskSourceDown}
     */
    TaskSourceDown,

    /**
     * The TaskSourceUp model constructor.
     * @property {module:model/TaskSourceUp}
     */
    TaskSourceUp,

    /**
     * The TooLong model constructor.
     * @property {module:model/TooLong}
     */
    TooLong,

    /**
     * The TooLongAllOf model constructor.
     * @property {module:model/TooLongAllOf}
     */
    TooLongAllOf,

    /**
     * The TooShort model constructor.
     * @property {module:model/TooShort}
     */
    TooShort,

    /**
     * The TooShortAllOf model constructor.
     * @property {module:model/TooShortAllOf}
     */
    TooShortAllOf,

    /**
     * The TypeToPrimaryFacets model constructor.
     * @property {module:model/TypeToPrimaryFacets}
     */
    TypeToPrimaryFacets,

    /**
     * The TypeToSecondaryFacets model constructor.
     * @property {module:model/TypeToSecondaryFacets}
     */
    TypeToSecondaryFacets,

    /**
     * The UserConfiguration model constructor.
     * @property {module:model/UserConfiguration}
     */
    UserConfiguration,

    /**
     * The UserConfigurationCollection model constructor.
     * @property {module:model/UserConfigurationCollection}
     */
    UserConfigurationCollection,

    /**
    * The CloudBucketsApi service constructor.
    * @property {module:api/CloudBucketsApi}
    */
    CloudBucketsApi,

    /**
    * The CloudConnectorsApi service constructor.
    * @property {module:api/CloudConnectorsApi}
    */
    CloudConnectorsApi,

    /**
    * The ContainersApi service constructor.
    * @property {module:api/ContainersApi}
    */
    ContainersApi,

    /**
    * The FilesApi service constructor.
    * @property {module:api/FilesApi}
    */
    FilesApi,

    /**
    * The MetadataApi service constructor.
    * @property {module:api/MetadataApi}
    */
    MetadataApi,

    /**
    * The MountsApi service constructor.
    * @property {module:api/MountsApi}
    */
    MountsApi,

    /**
    * The NasApi service constructor.
    * @property {module:api/NasApi}
    */
    NasApi,

    /**
    * The NasSharesApi service constructor.
    * @property {module:api/NasSharesApi}
    */
    NasSharesApi,

    /**
    * The PoolsApi service constructor.
    * @property {module:api/PoolsApi}
    */
    PoolsApi,

    /**
    * The StatisticsApi service constructor.
    * @property {module:api/StatisticsApi}
    */
    StatisticsApi,

    /**
    * The SystemsApi service constructor.
    * @property {module:api/SystemsApi}
    */
    SystemsApi,

    /**
    * The TapeDrivesApi service constructor.
    * @property {module:api/TapeDrivesApi}
    */
    TapeDrivesApi,

    /**
    * The TapeLibrariesApi service constructor.
    * @property {module:api/TapeLibrariesApi}
    */
    TapeLibrariesApi,

    /**
    * The TapesApi service constructor.
    * @property {module:api/TapesApi}
    */
    TapesApi,

    /**
    * The TaskCallbacksApi service constructor.
    * @property {module:api/TaskCallbacksApi}
    */
    TaskCallbacksApi,

    /**
    * The TaskDestinationsApi service constructor.
    * @property {module:api/TaskDestinationsApi}
    */
    TaskDestinationsApi,

    /**
    * The TaskExecutionsApi service constructor.
    * @property {module:api/TaskExecutionsApi}
    */
    TaskExecutionsApi,

    /**
    * The TaskMetadataApi service constructor.
    * @property {module:api/TaskMetadataApi}
    */
    TaskMetadataApi,

    /**
    * The TaskOptionsApi service constructor.
    * @property {module:api/TaskOptionsApi}
    */
    TaskOptionsApi,

    /**
    * The TaskSchedulesApi service constructor.
    * @property {module:api/TaskSchedulesApi}
    */
    TaskSchedulesApi,

    /**
    * The TaskSourcesApi service constructor.
    * @property {module:api/TaskSourcesApi}
    */
    TaskSourcesApi,

    /**
    * The TasksApi service constructor.
    * @property {module:api/TasksApi}
    */
    TasksApi,

    /**
    * The UsersApi service constructor.
    * @property {module:api/UsersApi}
    */
    UsersApi
};
