variables:
  GITHUB_OWNER: nodeum-io
  GITHUB_REPOSITORY: nodeum-sdk-js

Generate SDK:
  image: $CI_REGISTRY/nodeum/web/swagger:$SWAGGER_REF
  stage: build
  rules:
    - if: $SWAGGER_REF && $PACKAGE_VERSION
  script:
    - >-
      docker-entrypoint.sh generate
      -i /swagger/api.yml
      --git-user-id=$GITHUB_OWNER
      --git-repo-id=$GITHUB_REPOSITORY
      -p projectName=$PACKAGE_NAME
      -p projectVersion=$PACKAGE_VERSION
      -p projectDescription=
      -g javascript
      -o $CI_PROJECT_DIR
  artifacts:
    paths:
      - .openapi-generator/
      - docs/
      - src/
      - test/
      - .babelrc
      - .travis.yml
      - git_push.sh
      - mocha.opts
      - package.json
      - README.md

Commit SDK:
  image: docker:git
  stage: publish
  rules:
    - if: $SWAGGER_REF && $PACKAGE_VERSION
  needs:
    - job: Generate SDK
      artifacts: true
  before_script:
    - eval $(ssh-agent -s)
    - echo "$GIT_SSH_PRIV_KEY" | ssh-add -
    - git config --global user.email "$GITLAB_USER_EMAIL"
    - git config --global user.name "$GITLAB_USER_NAME"
    - git remote set-url --add --push origin git@$CI_SERVER_HOST:$CI_PROJECT_PATH.git
    - mkdir -p ~/.ssh
    - ssh-keyscan $CI_SERVER_HOST >> ~/.ssh/known_hosts
  script:
    - git add .
    - git commit -m "Generate SDK from $SWAGGER_REF for $PACKAGE_VERSION" || true
    - git push -o ci.skip origin HEAD:$CI_COMMIT_REF_NAME

Publish SDK:
  image: node:erbium-alpine
  stage: publish
  rules:
    - if: $SWAGGER_REF && $PACKAGE_VERSION
  needs:
    - job: Generate SDK
      artifacts: true
  before_script:
    - echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
    - npm install
    - npm run prepack
  script:
    - npm publish
